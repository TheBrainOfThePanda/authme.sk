#▄▀█ █ █ ▀█▀ █ █ █▀▄▀█ █▀▀
#█▀█ █▄█  █  █▀█ █ ▀ █ ██▄

#by PandaDevs
#Fancy text generator: http://fsymbols.com/generators/tarty/

#Changelog
#v2.0
#Massively revamped security by changing to base-32 from plain text
#Friendlier interface
#Smashed bugs in the process
#
#TODO:
#Create customizable yml
#Add QR feature

#depends skLib, skUtilities, skQuery

#change these if you know what you are doing.
options:
    version: 2.0 # do not change
    prefix: &1&lAuthMe &8&l»&r
    fjw: &fThis server has enabled 2FA for the server. Please set it up now. &e/2fa
    auth: &fPlease authenticate your session. (Enter your key...) &e/2fa (key)
    pass: &aAuthenticated!
    fail: &4Incorrect code, please try again. &e/2fa (key)
    noperm: &cYou do not have permission to execute that command. If you believe this is in error, please contact a server administrator.
    error: &4Fatal error. Please alert a server administrator immediately.

#plugin load
on load:
    if file "plugins/AuthMe/config.yml" does not exist:
        create file "plugins/AuthMe/config.yml"
        set skutil yml value "AUTHME.Enable" from file "plugins/AuthMe/config.yml" to true
        set skutil yml value "SERVER.Name" from file "plugins/AuthMe/config.yml" to "Server Name"
        set skutil yml value "SERVER.Site" from file "plugins/AuthMe/config.yml" to "www.serverwebsitehere.net"
        # vvv !!!!! DO NOT CHANGE THIS !!!!! vvv
        set skutil yml value "SKRIPT.File-Name" from file "plugins/AuthMe/config.yml" to "AuthMe"
        set skutil yml value "SKRIPT.Updates" from file "plugins/AuthMe/config.yml" to true
    set {OPTIONS::AUTHME::Enable} to yml value "AUTHME.Enable" of file "plugins/AuthMe/config.yml"
    set {OPTIONS::SERVER::Name} to yml value "SERVER.Name" of file "plugins/AuthMe/config.yml"
    set {OPTIONS::SERVER::Site} to yml value "SERVER.Site" of file "plugins/AuthMe/config.yml"
    set {OPTIONS::SKRIPT::File-Name} to yml value "SKRIPT.File-Name" of file "plugins/AuthMe/config.yml"
    set {OPTIONS::SKRIPT::Updates} to yml value "SKRIPT.Updates" of file "plugins/AuthMe/config.yml"
    
#config check
on load:
    if skutil yml value "AUTHME.Enable" from file "plugins/AuthMe/config.yml" is true:
        stop
    if skutil yml value "AUTHME.Enable" from file "plugins/AuthMe/config.yml" is false:
        stop
    else:
        set skutil yml value "AUTHME.Enable" from file "plugins/AuthMe/config.yml" to true

#load console output
on skript load:
    send "▄▀█ █ █ ▀█▀ █ █ █▀▄▀█ █▀▀" to console
    send "█▀█ █▄█  █  █▀█ █ ▀ █ ██▄" to console
    send "version &d{@version}" to console
    send "" to console
    send "by &bPandaDevs" to console
    send "" to console
    if {OPTIONS::SKRIPT::UPDATE} is true:
        if text from "https://pastebin.com/yFXVUj9N" is not "{@version}":
            set {_uv} to text from "https://pastebin.com/yFXVUj9N"
            send "You are currently running:     version &e{@version}" to console
            send "There's an update available:   version &a%{_uv}%" to console
            send "Get it here: add link here" to console
            send "" to console
    wait 2 seconds
    send "{@prefix}&aauthme.sk was successfully loaded!" to console

#listeners
on join:
    wait 5 ticks
    if player has permission "authme.2fa":
        if {authme.key.%uuid of player%} is set:
            set {authme.unlock.%uuid of player%} to false
            apply slowness 999 to player for 24 hours
            apply blindness 999 to player for 24 hours
            send "{@prefix} {@auth}"
        else:
            stop

on command:
    if {authme.unlock.%uuid of player%} is false:
        if executor is player:
            if command is not "2fa":
                cancel event
                send "{@prefix} {@auth}"

on chat:
    if {authme.unlock.%uuid of player%} is false:
        cancel event
        send "{@prefix} {@auth}"
        
#in case you fuck up
command /2fareset <offline player>:
    description: OP only usage to reset a player's 2FA if they get locked out.
    permission: op
    permission message: {@noperm}
    trigger:
        delete {authme.key.%uuid of arg 1%}
        set {authme.unlock.%uuid of arg 1%} to true
        delete {authme.fjw.%uuid of arg 1%}
        send "{@prefix} &aYou have successfully reset %arg 1%'s 2FA!"

#the one and only command
command /2fa [<string>] [<string>]:
    description: A two-factor authorization solution for your server
    trigger:
        if sender is console:
            send "{@prefix} &cThis feature is intended for player usage only!"
        else if player has permission "authme.2fa":
            if {OPTIONS::AUTHME::ENABLE} is true:
                if {authme.key.%uuid of player%} is not set:
                    if {authme.fjw.%uuid of player%} is not set: #first join warn
                        send "{@prefix} {@fjw}"
                        set {authme.fjw.%uuid of player%} to true
                        stop
                    else:
                        #syntax: set {_localvar} to [a] new (two|2)[( |-)]factor [base[( |-)]32] secret code
                        #notes: time-based otp generates secret.
                        send "{@prefix} &aGenerating client secret..."
                        set {_clientSecret} to a new two-factor base-32 secret code
                        wait 5 ticks
                        send "{@prefix} &aSaving secret..."
                        set {authme.key.%uuid of player%} to {_clientSecret}
                        wait 5 ticks
                        send "{@prefix} &aA secret has been successfully generated!"
                        send "{@prefix} &fPlease enter this secret into your two-factor authentication app: &d%{_clientSecret}%"
                        #make player execute command "/tellraw @s {"text":"Click here to copy the secret to clipboard.","clickEvent":{"action":"open_url","value":"%{authme.key.%uuid of player%}%"}}"
                        #future update for copy and paste this currently does not work
                        send "{@prefix} &fPlease execute the command &e/2fa (key)&f now to finish setting up 2FA."
                        send "{@prefix} &fIf you are encountering problems while setting up 2FA, please contact a server administrator."
                        send "{@prefix} &f&oA default fail message will appear; please disregard the message below until you have executed &e/2fa (key)&f."
                        set {_k} to arg 1 parsed as an integer
                        if {_k} is a number:
                            send "{@prefix} {@pass}"
                            wait 5 ticks
                            set {authme.key.%uuid of player%} to skutil hashed arg 1 using "MD5"
                            set {authme.unlock.%uuid of player%} to true
                        else:
                            send "{@prefix} {@fail}"
                else:
                    set {_c} to the current two-factor code of secret code {authme.key.%uuid of player%}
                    set {_k} to arg 1 parsed as an integer
                    if {_k} is a number:
                        if {_c} is arg 1:
                            send "{@prefix} {@pass}"
                            wait 20 ticks
                            remove slowness from player
                            remove blindness from player
                            set {authme.unlock.%uuid of player%} to true
                            send "{@prefix} %sender% has just authenticated their session!" to console
                        else:
                            send "{@prefix} {@fail}"
                    else:
                        send "{@prefix} {@fail}"
            else:
                send "&fUnknown command. Type '/help' for help."
        else:
            send "{@noperm}" to player